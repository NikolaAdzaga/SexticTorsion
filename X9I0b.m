// This is a part of the Proof of Theorem 3.1
// showing that j_{2B}(s) = j_{9I09b}(t)
// does not lead to any non-CM elliptic curves.
// Completely analogous to X1hyp.m, 
// so slightly less commented.

R<t, s> := FunctionField(Rationals(), 2);

j2B := 256*(s+1)^3 / (s);

Qx<x> := PolynomialRing(Rationals());
Qt<t> := FunctionField(Rationals());
Ps<s> := PolynomialRing(Qt);

j9I0b := -2^12*3^6*(t-1)^3*(t+1)^3*(t^3-3)^3*(t^3+9*t+6)^3*(t^3+9*t^2-9*t+15)^3/((t^2+3)^3*(t^3+3*t^2-9*t-3)^9*(t^3+9*t^2-9*t-9));
// This defines the curve in Q(t)[s]
// Get a common denominator and numerator over Q[t]
Qt_poly_ring := Parent(Denominator(j9I0b));
den := Denominator(j9I0b);
num := Numerator(j9I0b);


cleared_expr := num * (s) - den*256*(s+1)^3;
cleared_expr;


Qts<t, s> := PolynomialRing(Rationals(), 2);
    
cleared_poly := 
(-256*t^36 - 9216*t^35 - 124416*t^34 - 654336*t^33 + 864000*t^32 + 23224320*t^31
    + 54964224*t^30 - 272719872*t^29 - 1182200832*t^28 + 1405734912*t^27 +
    9929889792*t^26 - 3144241152*t^25 - 28475089920*t^24 + 7363436544*t^23 -
    155089022976*t^22 + 48964165632*t^21 + 1400158130688*t^20 -
    1270636222464*t^19 - 847912707072*t^18 + 2689253332992*t^17 -
    17456071048704*t^16 + 24671328509952*t^15 + 3410534191104*t^14 -
    3922561769472*t^13 + 17286977387520*t^12 - 56039810052096*t^11 -
    51020512782336*t^10 + 61371798073344*t^9 + 81072262720512*t^8 +
    6229951045632*t^7 - 38629904928768*t^6 - 30853712830464*t^5 -
    12212973345024*t^4 - 2895664702464*t^3 - 418758501888*t^2 - 34284321792*t -
    1224440064)*s^3 + (-768*t^36 - 27648*t^35 - 373248*t^34 - 1963008*t^33 +
    2592000*t^32 + 69672960*t^31 + 164892672*t^30 - 818159616*t^29 -
    3546602496*t^28 + 4217204736*t^27 + 29789669376*t^26 - 9432723456*t^25 -
    85425269760*t^24 + 22090309632*t^23 - 465267068928*t^22 + 146892496896*t^21
    + 4200474392064*t^20 - 3811908667392*t^19 - 2543738121216*t^18 +
    8067759998976*t^17 - 52368213146112*t^16 + 74013985529856*t^15 +
    10231602573312*t^14 - 11767685308416*t^13 + 51860932162560*t^12 -
    168119430156288*t^11 - 153061538347008*t^10 + 184115394220032*t^9 +
    243216788161536*t^8 + 18689853136896*t^7 - 115889714786304*t^6 -
    92561138491392*t^5 - 36638920035072*t^4 - 8686994107392*t^3 -
    1256275505664*t^2 - 102852965376*t - 3673320192)*s^2 + (-768*t^36 -
    27648*t^35 - 373248*t^34 - 4948992*t^33 - 78029568*t^32 - 646963200*t^31 -
    2656862208*t^30 - 14129676288*t^29 - 58449890304*t^28 - 11259150336*t^27 -
    506827487232*t^26 + 962137792512*t^25 - 2097820228608*t^24 +
    6046940086272*t^23 - 2996864925696*t^22 + 10918578954240*t^21 -
    7833503955456*t^20 - 9482426652672*t^19 - 1213965978624*t^18 -
    31974151071744*t^17 - 45805214403072*t^16 + 33412641398784*t^15 +
    119281867259904*t^14 + 42107677507584*t^13 + 6808068154368*t^12 -
    45107283566592*t^11 - 160349405607936*t^10 + 145801848324096*t^9 -
    39540706937856*t^8 - 86043852177408*t^7 + 172392453881856*t^6 -
    286512444628992*t^5 - 117216871766784*t^4 + 378686660060160*t^3 +
    85140215410176*t^2 - 158790285259776*t - 58776796392192)*s - 256*t^36 -
    9216*t^35 - 124416*t^34 - 654336*t^33 + 864000*t^32 + 23224320*t^31 +
    54964224*t^30 - 272719872*t^29 - 1182200832*t^28 + 1405734912*t^27 +
    9929889792*t^26 - 3144241152*t^25 - 28475089920*t^24 + 7363436544*t^23 -
    155089022976*t^22 + 48964165632*t^21 + 1400158130688*t^20 -
    1270636222464*t^19 - 847912707072*t^18 + 2689253332992*t^17 -
    17456071048704*t^16 + 24671328509952*t^15 + 3410534191104*t^14 -
    3922561769472*t^13 + 17286977387520*t^12 - 56039810052096*t^11 -
    51020512782336*t^10 + 61371798073344*t^9 + 81072262720512*t^8 +
    6229951045632*t^7 - 38629904928768*t^6 - 30853712830464*t^5 -
    12212973345024*t^4 - 2895664702464*t^3 - 418758501888*t^2 - 34284321792*t -
    1224440064;
    

 A2<t, s> := AffineSpace(Rationals(), 2);
X3_modular := Curve(A2, cleared_poly);
printf "Genus is %o.\n", Genus(X3_modular);
boo, C, mp := IsHyperelliptic(X3_modular);
Qx<x> := PolynomialRing(Rationals());
printf "This curve is isomorphic to the following.\n";
C;
Cs, mapToCs := SimplifiedModel(C);
Js := Jacobian(Cs);
printf "Rank bounds for the Jacobian: %o .\n", RankBounds(Js);
//0 0
printf "We find its rational points.";
Chabauty0(Js);
//{@ @}
printf "Birational map is undefined for:";
Points(SingularSubscheme(ProjectiveClosure(X3_modular)));
// {@ (-1 : -1 : 1), (1 : -1 : 1), (0 : 1 : 0), (1 : 0 : 0) @}
printf "So we get points at infinity and points with s=-1,
which is again a zero of the denominator for j_2B.";
// So we are done.
