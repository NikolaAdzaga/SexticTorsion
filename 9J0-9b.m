// Here we prove the remaining part of the Proposition 3.5
// This computation is completely analogous as in Prop.3.5.m.


// Qx<x> := PolynomialRing(Rationals());
Qt<t> := FunctionField(Rationals());
Ps<s> := PolynomialRing(Qt);

//We take j-map for level-9 subgroup from
// https://math.mit.edu/~drew/SZ16/g0groups.m
j9J0b:= -(t^2+3)^3*(t^3-9*t^2-9*t+9)*(t^9-9*t^8-1800*t^6-54*t^5+5022*t^4-216*t^3-5184*t^2-243*t+1971)^3/(8*(t-1)^3*(t+1)^3*(t^3-3*t^2-9*t+3)^9);

Qt_poly_ring := Parent(Denominator(j9J0b));
den := Denominator(j9J0b);
num := Numerator(j9J0b);

//3Cs.1.1 from Zywina's paper
numerator := 27 * (s + 1)^3 * (s + 3)^3 * (s^2 + 3)^3;
denominator := s^3 * (s^2 + 3*s + 3)^3;
cleared_expr := num * (denominator) - den*numerator;
print "Comparing the two j-maps gives the expression ";
//cleared_expr;


Qts<t, s> := PolynomialRing(Rationals(), 2);
// pasting to avoid Magma's coercion issues
cleared_poly := (-27*t^33 + 729*t^32 - 6480*t^31 + 5832*t^30 + 233928*t^29 - 979776*t^28 - 3151440*t^27 + 24220296*t^26 + 17819676*t^25 - 322063452*t^24 + 3814128*t^23 + 2771208936*t^22 - 511985448*t^21 - 16146253584*t^20 + 1482995952*t^19 +
    62141575464*t^18 + 3988130094*t^17 - 149337401058*t^16 - 15370061040*t^15 + 229206015576*t^14 + 1957120056*t^13 - 227675937888*t^12 + 43408100880*t^11 + 136877943960*t^10 - 64587560004*t^9 - 36161371404*t^8 + 36503619408*t^7 -
    5242134024*t^6 - 5828844888*t^5 + 3698829360*t^4 - 1045875888*t^3 + 165809592*t^2 - 14348907*t + 531441)*s^12 + (-324*t^33 + 8748*t^32 - 77760*t^31 + 69984*t^30 + 2807136*t^29 - 11757312*t^28 - 37817280*t^27 + 290643552*t^26 +
    213836112*t^25 - 3864761424*t^24 + 45769536*t^23 + 33254507232*t^22 - 6143825376*t^21 - 193755043008*t^20 + 17795951424*t^19 + 745698905568*t^18 + 47857561128*t^17 - 1792048812696*t^16 - 184440732480*t^15 + 2750472186912*t^14 +
    23485440672*t^13 - 2732111254656*t^12 + 520897210560*t^11 + 1642535327520*t^10 - 775050720048*t^9 - 433936456848*t^8 + 438043432896*t^7 - 62905608288*t^6 - 69946138656*t^5 + 44385952320*t^4 - 12550510656*t^3 + 1989715104*t^2 -
    172186884*t + 6377292)*s^11 + (-1782*t^33 + 48114*t^32 - 427680*t^31 + 384912*t^30 + 15439248*t^29 - 64665216*t^28 - 207995040*t^27 + 1598539536*t^26 + 1176098616*t^25 - 21256187832*t^24 + 251732448*t^23 + 182899789776*t^22 -
    33791039568*t^21 - 1065652736544*t^20 + 97877732832*t^19 + 4101343980624*t^18 + 263216586204*t^17 - 9856268469828*t^16 - 1014424028640*t^15 + 15127597028016*t^14 + 129169923696*t^13 - 15026611900608*t^12 + 2864934658080*t^11 +
    9033944301360*t^10 - 4262778960264*t^9 - 2386650512664*t^8 + 2409238880928*t^7 - 345980845584*t^6 - 384703762608*t^5 + 244122737760*t^4 - 69027808608*t^3 + 10943433072*t^2 - 947027862*t + 35075106)*s^10 + (-1/8*t^36 + 9/2*t^35 -
    243/4*t^34 - 11079/2*t^33 + 1268919/8*t^32 - 1417500*t^31 - 282258*t^30 + 79239060*t^29 - 662573277/2*t^28 - 83666250*t^27 - 766124325*t^26 - 2985058170*t^25 - 150165106929/2*t^24 - 18381498804*t^23 + 783949653666*t^22 -
    3300331716*t^21 - 16668224220087/4*t^20 + 346681265139*t^19 + 29412730978983/2*t^18 + 219641829363*t^17 - 137061820597383/4*t^16 - 2294920882980*t^15 + 53881132729986*t^14 + 513902738412*t^13 - 118195847086401/2*t^12 +
    6155932297446*t^11 + 45600143544315*t^10 - 7048489503978*t^9 - 50296362595533/2*t^8 - 131837757516*t^7 + 11466882970830*t^6 + 4197280628484*t^5 - 41910496421913/8*t^4 - 4497244529319/2*t^3 + 7115984892621/4*t^2 + 630208778409/2*t -
    1859618878641/8)*s^9 + (-9/8*t^36 + 81/2*t^35 - 2187/4*t^34 - 19521/2*t^33 + 2759751/8*t^32 - 3134700*t^31 - 11200842*t^30 + 365768460*t^29 - 3053224773/2*t^28 + 3926892150*t^27 - 42862258485*t^26 - 53327742390*t^25 -
    394957509921/2*t^24 - 171097469316*t^23 + 2940301613034*t^22 + 730595404836*t^21 - 54105271691823/4*t^20 + 917882397531*t^19 + 80154099682767/2*t^18 - 3945596725323*t^17 - 346492223091927/4*t^16 + 2170252697580*t^15 +
    144559261439514*t^14 + 1718801362548*t^13 - 387565088250249/2*t^12 - 9057639129786*t^11 + 207137545118235*t^10 + 32476121070138*t^9 - 345267990289917/2*t^8 - 55394414638524*t^7 + 110986515763110*t^6 + 46431360315036*t^5 -
    421136560594017/8*t^4 - 37368949376511/2*t^3 + 63058955057109/4*t^2 + 5714495259471/2*t - 16742883426849/8)*s^8 + (-9/2*t^36 + 162*t^35 - 2187*t^34 - 6966*t^33 + 1027647/2*t^32 - 4840560*t^31 - 51731784*t^30 + 1185167376*t^29 -
    4942475658*t^28 + 19451479320*t^27 - 200222745588*t^26 - 234480744648*t^25 - 407303638866*t^24 - 688921061328*t^23 + 8469010236168*t^22 + 3530620331568*t^21 - 34923522434031*t^20 + 1909730399148*t^19 + 86484007714302*t^18 -
    20520285452964*t^17 - 169079390635023*t^16 + 26940643305840*t^15 + 305940299253768*t^14 + 4550146823664*t^13 - 504651162289554*t^12 - 87799380364584*t^11 + 665939183048460*t^10 + 206634505565304*t^9 - 647576271351882*t^8 -
    264943958410800*t^7 + 450173718272952*t^6 + 192650108987088*t^5 - 429924979153377/2*t^4 - 73495398198078*t^3 + 62861973261813*t^2 + 11446037020458*t - 16744146130665/2)*s^7 + (-81/8*t^36 + 729/2*t^35 - 19683/4*t^34 + 729/2*t^33 +
    5784615/8*t^32 - 7042140*t^31 - 119860722*t^30 + 2527673364*t^29 - 21077166573/2*t^28 + 45637783830*t^27 - 464888033397*t^26 - 538166563002*t^25 - 1450254993921/2*t^24 - 1552337980020*t^23 + 17409174923394*t^22 + 8248015102140*t^21 -
    275948203390695/4*t^20 + 3415993802595*t^19 + 315353843063127/2*t^18 - 48539591545005*t^17 - 1166888850801399/4*t^16 + 69746263695900*t^15 + 552217300068834*t^14 + 9075301039980*t^13 - 2000451216092049/2*t^12 - 223333017743034*t^11 +
    1417057663146795*t^10 + 503292648164310*t^9 - 2871133511855517/2*t^8 - 617807056352652*t^7 + 1016004693724398*t^6 + 436925079084420*t^5 - 3886901649499113/8*t^4 - 329486791336407/2*t^3 + 565363795765725/4*t^2 + 51524213093577/2*t -
    150699840583617/8)*s^6 + (-27/2*t^36 + 486*t^35 - 6561*t^34 - 20898*t^33 + 3082941/2*t^32 - 14521680*t^31 - 155195352*t^30 + 3555502128*t^29 - 14827426974*t^28 + 58354437960*t^27 - 600668236764*t^26 - 703442233944*t^25 -
    1221910916598*t^24 - 2066763183984*t^23 + 25407030708504*t^22 + 10591860994704*t^21 - 104770567302093*t^20 + 5729191197444*t^19 + 259452023142906*t^18 - 61560856358892*t^17 - 507238171905069*t^16 + 80821929917520*t^15 +
    917820897761304*t^14 + 13650440470992*t^13 - 1513953486868662*t^12 - 263398141093752*t^11 + 1997817549145380*t^10 + 619903516695912*t^9 - 1942728814055646*t^8 - 794831875232400*t^7 + 1350521154818856*t^6 + 577950326961264*t^5 -
    1289774937460131/2*t^4 - 220486194594234*t^3 + 188585919785439*t^2 + 34338111061374*t - 50232438391995/2)*s^5 + (-81/8*t^36 + 729/2*t^35 - 19683/4*t^34 - 175689/2*t^33 + 24837759/8*t^32 - 28212300*t^31 - 100807578*t^30 +
    3291916140*t^29 - 27479022957/2*t^28 + 35342029350*t^27 - 385760326365*t^26 - 479949681510*t^25 - 3554617589289/2*t^24 - 1539877223844*t^23 + 26462714517306*t^22 + 6575358643524*t^21 - 486947445226407/4*t^20 + 8260941577779*t^19 +
    721386897144903/2*t^18 - 35510370527907*t^17 - 3118430007827343/4*t^16 + 19532274278220*t^15 + 1301033352955626*t^14 + 15469212262932*t^13 - 3488085794252241/2*t^12 - 81518752168074*t^11 + 1864237906064115*t^10 + 292285089631242*t^9
    - 3107411912609253/2*t^8 - 498549731746716*t^7 + 998878641867990*t^6 + 417882242835324*t^5 - 3790229045346153/8*t^4 - 336320544388599/2*t^3 + 567530595513981/4*t^2 + 51430457335239/2*t - 150685950841641/8)*s^4 + (-27/8*t^36 +
    243/2*t^35 - 6561/4*t^34 - 299133/2*t^33 + 34260813/8*t^32 - 38272500*t^31 - 7620966*t^30 + 2139454620*t^29 - 17889478479/2*t^28 - 2258988750*t^27 - 20685356775*t^26 - 80596570590*t^25 - 4054457887083/2*t^24 - 496300467708*t^23 +
    21166640648982*t^22 - 89108956332*t^21 - 450042053942349/4*t^20 + 9360394158753*t^19 + 794143736432541/2*t^18 + 5930329392801*t^17 - 3700669156129341/4*t^16 - 61962863840460*t^15 + 1454790583709622*t^14 + 13875373937124*t^13 -
    3191287871332827/2*t^12 + 166210172031042*t^11 + 1231203875696505*t^10 - 190309216607406*t^9 - 1358001790079391/2*t^8 - 3559619452932*t^7 + 309605840212410*t^6 + 113326576969068*t^5 - 1131583403391651/8*t^4 - 121425602291613/2*t^3 +
    192131592100767/4*t^2 + 17015637017043/2*t - 50209709723307/8)*s^3 + (-144342*t^33 + 3897234*t^32 - 34642080*t^31 + 31177872*t^30 + 1250579088*t^29 - 5237882496*t^28 - 16847598240*t^27 + 129481702416*t^26 + 95263987896*t^25 -
    1721751214392*t^24 + 20390328288*t^23 + 14814882971856*t^22 - 2737074205008*t^21 - 86317871660064*t^20 + 7928096359392*t^19 + 332208862430544*t^18 + 21320543482524*t^17 - 798357746056068*t^16 - 82168346319840*t^15 +
    1225335359269296*t^14 + 10462763819376*t^13 - 1217155563949248*t^12 + 232059707304480*t^11 + 731749488410160*t^10 - 345285095781384*t^9 - 193318691525784*t^8 + 195148349355168*t^7 - 28024448492304*t^6 - 31161004771248*t^5 +
    19773941758560*t^4 - 5591252497248*t^3 + 886418078832*t^2 - 76709256822*t + 2841083586)*s^2 + (-78732*t^33 + 2125764*t^32 - 18895680*t^31 + 17006112*t^30 + 682134048*t^29 - 2857026816*t^28 - 9189599040*t^27 + 70626383136*t^26 +
    51962175216*t^25 - 939137026032*t^24 + 11121997248*t^23 + 8080845257376*t^22 - 1492949566368*t^21 - 47082475450944*t^20 + 4324416196032*t^19 + 181204834053024*t^18 + 11629387354104*t^17 - 435467861485128*t^16 - 44819097992640*t^15 +
    668364741419616*t^14 + 5706962083296*t^13 - 663903034881408*t^12 + 126578022166080*t^11 + 399136084587360*t^10 - 188337324971664*t^9 - 105446559014064*t^8 + 106444554193728*t^7 - 15286062813984*t^6 - 16996911693408*t^5 +
    10785786413760*t^4 - 3049774089408*t^3 + 483500770272*t^2 - 41841412812*t + 1549681956)*s - 19683*t^33 + 531441*t^32 - 4723920*t^31 + 4251528*t^30 + 170533512*t^29 - 714256704*t^28 - 2297399760*t^27 + 17656595784*t^26 +
    12990543804*t^25 - 234784256508*t^24 + 2780499312*t^23 + 2020211314344*t^22 - 373237391592*t^21 - 11770618862736*t^20 + 1081104049008*t^19 + 45301208513256*t^18 + 2907346838526*t^17 - 108866965371282*t^16 - 11204774498160*t^15 +
    167091185354904*t^14 + 1426740520824*t^13 - 165975758720352*t^12 + 31644505541520*t^11 + 99784021146840*t^10 - 47084331242916*t^9 - 26361639753516*t^8 + 26611138548432*t^7 - 3821515703496*t^6 - 4249227923352*t^5 + 2696446603440*t^4 -
    762443522352*t^3 + 120875192568*t^2 - 10460353203*t + 387420489;
A2<t, s> := AffineSpace(Rationals(), 2);

printf "which factors as:\n";
Factorisation(cleared_poly);
printf "Factorisation has %o factors.\n", #Factorisation(cleared_poly);


factors := Factorisation(cleared_poly);

printf "\n ================== Analyzing the first factor ================== \n"; 
C1 := Curve(A2, factors[1][1]);
printf "Genus is %o\n", Genus(C1);
//1
//PointSearch(C1, 1000);
PC1 := ProjectiveClosure(C1);
E1, mapToE1 := EllipticCurve(PC1, PC1 ! [0,1,0]);
RankBounds(E1);
// 0 0
T, mT := TorsionSubgroup(E1);
// Z/3Z
torsion_gen := [mT(g) : g in Generators(T)][1];
Dimension(torsion_gen @@ mapToE1);
//0
//preimage is 0-dimensional scheme
Points(torsion_gen @@ mapToE1);
// {@ (-6 : 1 : 0), (0 : 1 : 0) @}
Points((2*torsion_gen) @@ mapToE1);
//{@ (-6 : 1 : 0), (0 : 1 : 0) @}
Points((3*torsion_gen) @@ mapToE1);
printf "We only get points at infinity so we are done with the first factor.\n";

printf "\n ================== Analyzing the second factor ================== \n"; 
C2 := Curve(A2, factors[2][1]);
Genus(C2);
//PointSearch(C2, 1000);
PC2 := ProjectiveClosure(C2);
E2, mapToE2 := EllipticCurve(PC2, PC2 ! [1,0,1]);
E2;
RankBounds(E2);
// 0 0 
T, mT := TorsionSubgroup(E2);
T;
// Z/3Z again
torsion_gen := [mT(g) : g in Generators(T)][1];
Dimension(torsion_gen @@ mapToE2);
//0
//preimage is 0-dimensional scheme
Points(torsion_gen @@ mapToE2);
// {@ (-1 : 0 : 1), (1 : 0 : 1), (0 : 1 : 0), (1 : 0 : 0) @}
Points((2*torsion_gen) @@ mapToE2);
//{@ (-1 : 0 : 1), (1 : 0 : 1), (0 : 1 : 0), (1 : 0 : 0) @}
Points((3*torsion_gen) @@ mapToE2);
//{@ (-1 : 0 : 1), (1 : 0 : 1), (0 : 1 : 0), (1 : 0 : 0) @}

printf "Except points at infinity, we get either t=0 or s=0,
but both of these correspond to j-invariant being infinite
as there is t / s in the denominator.\n";


printf "\n ====== Analyzing the third factor which defines a highly singular plane curve ========== \n"; 
C3 := Curve(A2, factors[3][1]);
printf "Genus is %o\n", Genus(C3);
//PointSearch(C3, 1000);
PC3 := ProjectiveClosure(C3);
CanMapC := CanonicalMap(C3);

CanMapEqs := DefiningEquations(CanMapC);
F1 := CanMapEqs[1];
F2 := CanMapEqs[2];




P<t,s,u> := PolynomialRing(Rationals(), 3);
F1p := Evaluate(F1, [t,s]);
F2p := Evaluate(F2, [t,s]);
G := F1p - u*F2p;
//G;

u_s_t := -Coefficient(G, u, 0)/Coefficient(G, u, 1);

N := Numerator(u_s_t);
D := Denominator(u_s_t);
//D;
R<t,s,u> := PolynomialRing(Rationals(),3);
H := u*R!D - R!N;    // polynomial in s,t,u

printf "We copy defining polynomial again (as Magma is strict about coercions): %o\n", factors[3][1];


h := 
t^18*s^6 + 9*t^18*s^5 + 36*t^18*s^4 + 81*t^18*s^3 + 108*t^18*s^2 + 81*t^18*s +
    27*t^18 - 18*t^17*s^6 - 162*t^17*s^5 - 648*t^17*s^4 - 1458*t^17*s^3 -
    1944*t^17*s^2 - 1458*t^17*s - 486*t^17 + 81*t^16*s^6 + 729*t^16*s^5 +
    2916*t^16*s^4 + 6561*t^16*s^3 + 8748*t^16*s^2 + 6561*t^16*s + 2187*t^16 +
    288*t^15*s^6 + 648*t^15*s^5 - 12960*t^15*s^4 - 46656*t^15*s^3 -
    38880*t^15*s^2 + 5832*t^15*s + 7776*t^15 - 2700*t^14*s^6 - 6804*t^14*s^5 +
    112752*t^14*s^4 + 411156*t^14*s^3 + 338256*t^14*s^2 - 61236*t^14*s -
    72900*t^14 - 648*t^13*s^6 + 46656*t^13*s^4 + 157464*t^13*s^3 +
    139968*t^13*s^2 - 17496*t^13 + 34884*t^12*s^6 - 18468*t^12*s^5 +
    1045872*t^12*s^4 + 2195748*t^12*s^3 + 3137616*t^12*s^2 - 166212*t^12*s +
    941868*t^12 - 10368*t^11*s^6 + 5832*t^11*s^5 + 816480*t^11*s^4 +
    2729376*t^11*s^3 + 2449440*t^11*s^2 + 52488*t^11*s - 279936*t^11 -
    242514*t^10*s^6 + 284310*t^10*s^5 - 1802088*t^10*s^4 + 1141614*t^10*s^3 -
    5406264*t^10*s^2 + 2558790*t^10*s - 6547878*t^10 + 29700*t^9*s^6 +
    374220*t^9*s^5 + 2352240*t^9*s^4 + 6254820*t^9*s^3 + 7056720*t^9*s^2 +
    3367980*t^9*s + 801900*t^9 + 865566*t^8*s^6 + 949158*t^8*s^5 +
    5756184*t^8*s^4 - 6101730*t^8*s^3 + 17268552*t^8*s^2 + 8542422*t^8*s +
    23370282*t^8 + 209952*t^7*s^6 + 1417176*t^7*s^5 + 1889568*t^7*s^4 +
    5668704*t^7*s^2 + 12754584*t^7*s + 5668704*t^7 - 969084*t^6*s^6 +
    8748*t^6*s^5 - 5703696*t^6*s^4 + 9054180*t^6*s^3 - 17111088*t^6*s^2 +
    78732*t^6*s - 26165268*t^6 + 110808*t^5*s^6 + 734832*t^5*s^5 +
    839808*t^5*s^4 - 472392*t^5*s^3 + 2519424*t^5*s^2 + 6613488*t^5*s +
    2991816*t^5 + 481140*t^4*s^6 - 866052*t^4*s^5 + 11652336*t^4*s^4 +
    21966228*t^4*s^3 + 34957008*t^4*s^2 - 7794468*t^4*s + 12990780*t^4 -
    326592*t^3*s^6 - 1942056*t^3*s^5 + 209952*t^3*s^4 + 9447840*t^3*s^3 +
    629856*t^3*s^2 - 17478504*t^3*s - 8817984*t^3 + 94041*t^2*s^6 +
    1948617*t^2*s^5 - 6062364*t^2*s^4 - 20726199*t^2*s^3 - 18187092*t^2*s^2 +
    17537553*t^2*s + 2539107*t^2 - 13122*t*s^6 - 590490*t*s^5 - 6141096*t*s^4 -
    18068994*t*s^3 - 18423288*t*s^2 - 5314410*t*s - 354294*t + 729*s^6 +
    59049*s^5 + 4435236*s^4 + 13286025*s^3 + 13305708*s^2 + 531441*s + 19683;

res := Resultant(H, R!h, s);   // eliminates s, result in R[t,u]
printf "printing resultant's factorisation:\n";

print Factorisation(res);

printf "The only rational roots of all the factors are t=-1, t=1\n";

printf "so we intersect our plane curve with t = -1 : \n";
Factorisation(Evaluate(factors[3][1], [-1, s]));
printf "and  t = 1: \n";
Factorisation(Evaluate(factors[3][1], [1, s]));
printf "But these have no rational roots s.\n";

//SingularPoints(PC3);
//{@ (0 : 1 : 0), (1 : 0 : 0) @}

//P<t,s> := PolynomialRing(Rationals(), 2);
//I := ideal< P | P ! factors[3][1], P ! F2>;
//A2 := AffineSpace(P);
//V := Scheme(A2, I);
//Dimension(V);
//0
//Points(V);
//{@ @}

printf "We conclude that there are no affine rational points on the
starting curve defined by the third factor.\n";

print "So we are done.";