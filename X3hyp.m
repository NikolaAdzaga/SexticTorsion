
R<t, s> := FunctionField(Rationals(), 2);

j2B := 256*(s+1)^3 / (s);

Qx<x> := PolynomialRing(Rationals());
Qt<t> := FunctionField(Rationals());
Ps<s> := PolynomialRing(Qt);

j9c := (2^12 * 3^6 * t^3 * (t^2 - 1)^3 * (t^2 - 9)^3 *
        (t^6 + 9*t^5 + 9*t^4 - 90*t^3 + 27*t^2 + 81*t + 27)^3) /
       ((t^2 + 3)^9 * (t^3 + 3*t^2 - 9*t - 3)^3 * (t^3 + 9*t^2 - 9*t - 9)^3);

// This defines the curve in Q(t)[s]
// Get a common denominator and numerator over Q[t]
Qt_poly_ring := Parent(Denominator(j9c));
den := Denominator(j9c);
num := Numerator(j9c);


cleared_expr := num * (s) - den*256*(s+1)^3;
cleared_expr;


Qts<t, s> := PolynomialRing(Rationals(), 2);
    
cleared_poly := 
(-256*t^36 - 9216*t^35 - 124416*t^34 - 764928*t^33 - 2121984*t^32 - 3317760*t^31
    - 4755456*t^30 + 40476672*t^29 + 143576064*t^28 + 106942464*t^27 +
    1127208960*t^26 - 1746800640*t^25 - 2078991360*t^24 + 4926873600*t^23 -
    76939849728*t^22 + 200891031552*t^21 - 541746703872*t^20 +
    1293774612480*t^19 - 2091383940096*t^18 + 3881323837440*t^17 -
    4875720334848*t^16 + 5424057851904*t^15 - 6232127827968*t^14 +
    1197230284800*t^13 - 1515584701440*t^12 - 3820252999680*t^11 +
    7395617986560*t^10 + 2104948518912*t^9 + 8478023003136*t^8 +
    7170321014784*t^7 - 2527244292096*t^6 - 5289581076480*t^5 -
    10149383690496*t^4 - 10975880733696*t^3 - 5355700839936*t^2 -
    1190155742208*t - 99179645184)*s^3 + (-768*t^36 - 27648*t^35 - 373248*t^34 -
    2294784*t^33 - 6365952*t^32 - 9953280*t^31 - 14266368*t^30 + 121430016*t^29
    + 430728192*t^28 + 320827392*t^27 + 3381626880*t^26 - 5240401920*t^25 -
    6236974080*t^24 + 14780620800*t^23 - 230819549184*t^22 + 602673094656*t^21 -
    1625240111616*t^20 + 3881323837440*t^19 - 6274151820288*t^18 +
    11643971512320*t^17 - 14627161004544*t^16 + 16272173555712*t^15 -
    18696383483904*t^14 + 3591690854400*t^13 - 4546754104320*t^12 -
    11460758999040*t^11 + 22186853959680*t^10 + 6314845556736*t^9 +
    25434069009408*t^8 + 21510963044352*t^7 - 7581732876288*t^6 -
    15868743229440*t^5 - 30448151071488*t^4 - 32927642201088*t^3 -
    16067102519808*t^2 - 3570467226624*t - 297538935552)*s^2 + (-768*t^36 -
    27648*t^35 - 373248*t^34 + 691200*t^33 + 74255616*t^32 + 706682880*t^31 +
    388841472*t^30 - 30102700032*t^29 - 126064512000*t^28 + 451153649664*t^27 +
    3507678701568*t^26 - 2674701139968*t^25 - 49796424317952*t^24 -
    959934136320*t^23 + 442279280001024*t^22 + 76858744430592*t^21 -
    2582973457168896*t^20 - 186619782297600*t^19 + 9742724168094720*t^18 -
    559859346892800*t^17 - 23246761114520064*t^16 + 2075186099625984*t^15 +
    35824621680082944*t^14 - 233263995125760*t^13 - 36301593327787008*t^12 -
    5849571393110016*t^11 + 23013879960987648*t^10 + 8880057286336512*t^9 -
    7443983369088000*t^8 - 5332603002568704*t^7 + 206646300721152*t^6 +
    1126680769290240*t^5 + 355162309403904*t^4 + 9917964518400*t^3 -
    16067102519808*t^2 - 3570467226624*t - 297538935552)*s - 256*t^36 -
    9216*t^35 - 124416*t^34 - 764928*t^33 - 2121984*t^32 - 3317760*t^31 -
    4755456*t^30 + 40476672*t^29 + 143576064*t^28 + 106942464*t^27 +
    1127208960*t^26 - 1746800640*t^25 - 2078991360*t^24 + 4926873600*t^23 -
    76939849728*t^22 + 200891031552*t^21 - 541746703872*t^20 +
    1293774612480*t^19 - 2091383940096*t^18 + 3881323837440*t^17 -
    4875720334848*t^16 + 5424057851904*t^15 - 6232127827968*t^14 +
    1197230284800*t^13 - 1515584701440*t^12 - 3820252999680*t^11 +
    7395617986560*t^10 + 2104948518912*t^9 + 8478023003136*t^8 +
    7170321014784*t^7 - 2527244292096*t^6 - 5289581076480*t^5 -
    10149383690496*t^4 - 10975880733696*t^3 - 5355700839936*t^2 -
    1190155742208*t - 99179645184;
    
    A2<t, s> := AffineSpace(Rationals(), 2);
X3_modular := Curve(A2, cleared_poly);
boo, C, mp := IsHyperelliptic(X3_modular);
Qx<x> := PolynomialRing(Rationals());
X3_known := HyperellipticCurve(12*x^6 - 36*x^5 + 45*x^4 - 30*x^3 + 45*x^2 - 36*x + 12);
tr, mapToX3 := IsIsomorphic(C, X3_known);
tr;
J := Jacobian(C);
Jac3 := Jacobian(X3_known);
RankBounds(Jac3);
Chabauty0(Jac3);
 pts := Chabauty0(Jac3);
  {pt @@ mapToX3 : pt in pts};
pts_on_X3_modular := { Points((pt @@ mapToX3) @@ mp) : pt in pts };
pts_on_X3_modular;
//
//{
//    {@ @},
//    {@ (0, 0) @}
//}
// s = 0 implies j2B = infty